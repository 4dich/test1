<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="messageMapper">
  
  	<resultMap type="Message" id="messageResultSet">
  		<id property="mId" column="MID"/>
  		<result property="mImg" column="IMG"/>
  		<result property="mSender" column="SENDER"/>
  		<result property="mSenderId" column="SENDERID"/>  		
  		<result property="mReceiver" column="RECEIVER"/>
  		<result property="mReceiverId" column="RECEIVERID"/>  		
  		<result property="mContent" column="MCONTENT"/>
  		<result property="mDate" column="MDATE"/>
  		<result property="mRead" column="MREAD"/>
  		<result property="mStatus" column="MSTATUS"/>
  	</resultMap>
  	
  	<resultMap id="friendResultSet" type="FriendList">
		<id property="msgMyId" column="MSGMYID"/>
		<result property="msgFriendId" column="MSGFRIENDID"/>
		<result property="msgFriendImg" column="MSGFRIENDIMG"/>
		<result property="msgFriendName" column="MSGFRIENDNAME"/>
		<result property="msgFollowingNum" column="MSGFOLLOWINGNUM"/>
		<result property="msgFollowerNum" column="MSGFOLLOWERNUM"/>
		<result property="msgFriendCategory" column="MSGFRIENDCATEGORY"/>		
	</resultMap>
	
	<resultMap id="friendInfoResultSet" type="FriendInfo">
		<id property="fId" column="FID"/>
		<result property="fName" column="FNAME"/>
		<result property="fImg" column="FIMG"/>
		<result property="fIntro" column="FINTRO"/>		
	</resultMap>
	
	<resultMap id="messageListResultSet" type="MessageList">
		<id property="fId" column="FID"/>
		<result property="fName" column="FNAME"/>
		<result property="fImg" column="FIMG"/>
		<result property="mId" column="MID"/>
		<result property="mContent" column="MCONTENT"/>
		<result property="mDate" column="MDATE"/>
		<result property="rowNum" column="MROWNUM"/>
	</resultMap>
  	
  	<!-- 메시지 리스트 가져오기 -->
  	<select id="msgList" resultMap="messageResultSet">
  		SELECT *
  		FROM MESSAGE
  		WHERE MDEL_YN = 'N'
  		OREDER BY MID DESC
  	</select>
  	
  	
  	<!-- 메시지 친구 리스트 가져오기 -->
  	<select id="msgFriendList" resultMap="friendResultSet">
  		SELECT F.HOST AS MSGMYID, 
  			   F.FOLLOWER AS MSGFRIENDID,
		       M.PICTURE AS MSGFRIENDIMG,
		       NICKNAME AS MSGFRIENDNAME,
		       (SELECT COUNT(*)FROM FOLLOW WHERE HOST = F.FOLLOWER) AS MSGFOLLOWINGNUM,
		       (SELECT COUNT(*) FROM FOLLOW WHERE FOLLOWER = F.FOLLOWER) AS MSGFOLLOWERNUM,
		       P.INTEREST MSGFRIENDCATEGORY
		FROM MEMBER M
		JOIN FOLLOW F ON (M.USERID = F.FOLLOWER)
		JOIN MYPAGE P ON (F.FOLLOWER = P.USERID)
		WHERE F.HOST = #{userId}
  	</select>
  	
  	<!-- 메시지 친구 검색 리스트 가져오기 -->
  	<select id="msgSearchFriend" resultMap="friendResultSet">
  		SELECT F.HOST AS MSGMYID, 
  			   F.FOLLOWER AS MSGFRIENDID,
		       M.PICTURE AS MSGFRIENDIMG,
		       NICKNAME AS MSGFRIENDNAME,
		       (SELECT COUNT(*)FROM FOLLOW WHERE HOST = F.FOLLOWER) AS MSGFOLLOWINGNUM,
		       (SELECT COUNT(*) FROM FOLLOW WHERE FOLLOWER = F.FOLLOWER) AS MSGFOLLOWERNUM,
		       P.INTEREST MSGFRIENDCATEGORY
		FROM MEMBER M
		JOIN FOLLOW F ON (M.USERID = F.FOLLOWER)
		JOIN MYPAGE P ON (F.FOLLOWER = P.USERID)
		WHERE F.HOST = #{userId}
		AND M.NICKNAME LIKE '%' || #{searchWord} || '%'
  	</select>
  	
  	<!-- 메시지 상세보기 - 친구 정보 불러오기 -->
  	<select id="getFriendInfo" resultMap="friendInfoResultSet">
  		SELECT M.USERID AS FID,
		       M.NICKNAME AS FNAME,
		       M.PICTURE AS FIMG,
		       P.INTRO AS FINTRO
		FROM MEMBER M
		JOIN MYPAGE P ON (M.USERID = P.USERID)
		WHERE M.USERID = #{fId}
  	</select>
  	
  	<!-- 메시지 상세보기 - 메시지 내용 불러오기 -->
  	<select id="getMsgContent" parameterType="java.util.Map" resultMap="messageResultSet">
  		SELECT M.MID AS MID,
		       MM.PICTURE AS IMG,
		       MM.NICKNAME AS SENDER,
		       M.SENDER AS SENDERID,  
		       (SELECT NICKNAME FROM MEMBER WHERE USERID = M.RECEIVER) AS RECEIVER,
		       M.RECEIVER AS RECEIVERID,
		       M.MCONTENT AS MCONTENT,
		       M.MDATE AS MDATE,
		       M.MREAD AS MREAD,
		       M.MDEL_YN AS MSTATUS
		FROM MESSAGE M
		JOIN MEMBER MM ON (MM.USERID = M.SENDER)
		WHERE SENDER = #{userId} AND RECEIVER = #{fId}
		AND MDEL_YN = 'N'
		UNION
		SELECT M.MID AS MID,
		       MM.PICTURE AS IMG,
		       MM.NICKNAME AS SENDER,
		       M.SENDER AS SENDERID,  
		       (SELECT NICKNAME FROM MEMBER WHERE USERID = M.RECEIVER) AS RECEIVER,
		       M.RECEIVER AS RECEIVERID,
		       M.MCONTENT AS MCONTENT,
		       M.MDATE AS MDATE,
		       M.MREAD AS MREAD,
		       M.MDEL_YN AS MSTATUS
		FROM MESSAGE M
		JOIN MEMBER MM ON (MM.USERID = M.SENDER)
		WHERE SENDER = #{fId} AND RECEIVER = #{userId}
		AND MDEL_YN = 'N'
		ORDER BY MDATE ASC
  	</select>
  	
  	<!-- 메시지 저장하기 -->
  	<insert id="saveMsgContent" parameterType="java.util.Map">
  		INSERT INTO MESSAGE 
  		VALUES(SEQ_MID.NEXTVAL, #{userId}, #{fId}, #{mContent}, (TO_CHAR(SYSDATE,'yyyy-mm-dd hh24:mi:ss')), DEFAULT, DEFAULT)
  	</insert>
  	
  	<!-- 메시지 삭제하기 -->
  	<update id="msgDelete">
  		
  	</update>
  	
  	<!-- 메시지 리스트 가져오기 -->
  	<select id="getMsgList" resultMap="messageListResultSet">
  		SELECT *
		FROM 
		    (SELECT 
		       (SELECT USERID FROM MEMBER WHERE USERID = MSG.SENDER) AS FID,
		       (SELECT NICKNAME FROM MEMBER WHERE USERID = MSG.SENDER) AS FNAME,  
		       (SELECT PICTURE FROM MEMBER WHERE USERID = MSG.SENDER) AS FIMG,
		       MSG.MID AS MID,
		       MSG.MCONTENT AS MCONTENT,
		       MSG.MDATE AS MDATE,
		       ROW_NUMBER() OVER(PARTITION BY (SELECT USERID FROM MEMBER WHERE USERID = MSG.SENDER) ORDER BY MDATE DESC) AS MROWNUM
		    FROM MEMBER MEM
		    JOIN MESSAGE MSG ON (MEM.USERID = MSG.RECEIVER)
		    WHERE MSG.RECEIVER = #{userId} OR MSG.SENDER = #{userId})
		WHERE MROWNUM = 1
		AND FID != #{userId}
  	</select>
  	
  	<!-- 메시지 리스트 친구 서치 -->
  	<select id="msgSearchFriendMsg"  resultMap="messageListResultSet">
  		SELECT F.HOST AS MSGMYID, 
  			   F.FOLLOWER AS MSGFRIENDID,
		       M.PICTURE AS MSGFRIENDIMG,
		       NICKNAME AS MSGFRIENDNAME,
		       (SELECT COUNT(*)FROM FOLLOW WHERE HOST = F.FOLLOWER) AS MSGFOLLOWINGNUM,
		       (SELECT COUNT(*) FROM FOLLOW WHERE FOLLOWER = F.FOLLOWER) AS MSGFOLLOWERNUM,
		       P.INTEREST MSGFRIENDCATEGORY
		FROM MEMBER M
		JOIN FOLLOW F ON (M.USERID = F.FOLLOWER)
		JOIN MYPAGE P ON (F.FOLLOWER = P.USERID)
		WHERE F.HOST = #{userId}
		AND M.NICKNAME LIKE '%' || #{searchWord} || '%'
  	</select>
  	
  </mapper>